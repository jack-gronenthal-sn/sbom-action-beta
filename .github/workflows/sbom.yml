name: ServiceNow SBOM Integration
run-name: ${{ github.actor }} is uploading a SBOM to ServiceNow.
on:
  # Executed when an action is invoked via GitHub
  workflow_call:
    inputs:
      args:
        description: A JSON object that captures the arguments for execution.
        required: false
        type: string
      sbom-repository-name:
        description: The repository that holds the SBOM document.
        required: true
        type: string
      sbom-path:
        description: The path to the SBOM document from the root directory.
        type: string
        required: true
      ref:
        description: The branch, tag, or SHA256 hash to checkout.
        type: string
        required: false
      sbom-source:
        description: The source from which the SBOM will be read.
        type: string
        required: true
    secrets:
      sn-sbom-username:
        required: true
      sn-sbom-password:
        required: true
      sn-instance-url:
        required: true

  # Invoked via a REST API
  workflow_dispatch:
    inputs:
      sbom-repository-name:
        description: The repository that holds the SBOM document.
        required: true
        type: string
      sbom-path:
        description: The path to the SBOM document from the root directory.
        type: string
        required: true
      ref:
        description: The branch, tag, or SHA256 hash to checkout.
        type: string
        required: false
    secrets:
      service-now-sbom-username:
        required: true
      service-now-sbom-password:
        required: true
      service-now-instance-url:
        required: true

jobs:
  checkout-repositories:
    runs-on: ubuntu-latest
    outputs:
      document: ${{ steps.sbom-document-source.outputs.sbom_document }}
    steps:
      - name: Checkout the client repository.
        uses: actions/checkout@v4
        with:
          path: client
          sparse-checkout: |
            ${{ inputs.sbom-path }}
      - name: Checkout the ServiceNow SBOM Workflow.
        uses: actions/checkout@v4
        with:
          repository: jack-gronenthal-sn/sbom-action-beta
          path: service-now
          ref: json-input
      - name: Checkout Node.js
        uses: actions/setup-node@v4
        with:
          node-version: latest
      - name: Install JSON Schema Validator
        continue-on-error: true
        run: |
          npm install -g ajv-cli
          echo '${{ inputs.args }}' >> $GITHUB_WORKSPACE/service-now/_args.json
          ajv test --spec=draft2020 -s $GITHUB_WORKSPACE/service-now/input_schema.json -d $GITHUB_WORKSPACE/service-now/_args.json --valid
          validation_status=$?
          
          echo "::group::Runtime Arguments Validation"
          echo "Provided runtime arguments:"
          cat $GITHUB_WORKSPACE/service-now/_args.json
          
          echo "validation status -> $validation_status"
          echo "boolean check -> $((validation_status==0))"
          
          if [ $validation_status -eq 0 ]; then
            echo "✅ Runtime Arguments Validated Successfully"
            echo "::endgroup::"  
          else
            ajv --spec=draft2020 -s ./input_schema.json -d ./test/sample_inputs/repository.json >> validation_error_log 2>&1
            error_message=$(ajv --spec=draft2020 -s ./input_schema.json -d ./test/sample_inputs/repository.json 2> .ajv_error_log ; \
              sed -n "s/.*message: \"\([^\"]*\)\".*/\1/p" .ajv_error_log > error_message ; \
              cat error_message)
            echo "::error title=❌ Runtime Arguments Failed Validation::$error_message" # Consider if the single quote will break this
            cat .ajv_error_log
            echo "::endgroup::"  
            exit 1
          fi

      - name: Determine how SBOM is being provided.
        id: sbom-document-source
        run: |
          if [ "${{ inputs.sbom-source}}" == "" ]; then
              echo sbom_document=$(cat "$GITHUB_WORKSPACE/client/${{ inputs.sbom-path }}") >> "$GITHUB_OUTPUT"
          fi

  cURL:
    needs: checkout-repositories
    uses: jack-gronenthal-sn/sbom-action-beta/.github/workflows/curl.yml@main
    with:
     operation: upload
     document: ${{ needs.checkout-repositories.outputs.document }}
    secrets:
     sn-instance-url:   ${{ secrets.sn-instance-url }}
     sn-sbom-username:  ${{ secrets.sn-sbom-username }}
     sn-sbom-password:  ${{ secrets.sn-sbom-password }}



#      - name: Checkout the ServiceNow SBOM Workflow.
#        uses: actions/checkout@v4
#        with:
#          repository: jack-gronenthal-sn/sbom-action-beta
#          path: service-now

#      - name: Post the SBOM document to the ServiceNow Platform.
#        run: |
#          curl ${{ secrets.service-now-instance-url}}/api/snc/test_github_action -u ${{ secrets.service-now-sbom-username }}:${{ secrets.service-now-sbom-password }}

#      - run: echo "${{ secrets.service-now-sbom-username }}"
#      - name: Verify Structure
#        run: |
#            echo WORKSPACE
#            ls "$GITHUB_WORKSPACE"
#            echo CLIENT
#            ls "$GITHUB_WORKSPACE/client"
#            echo SERVICE-NOW
#            ls "$GITHUB_WORKSPACE/service-now"
#            echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
#            cat "$GITHUB_WORKSPACE/client/${{ inputs.sbom-path }}"


#jobs:
#  checkout-repo:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout the repository to the runner
#        uses: actions/checkout@v4
#        with:
#          repository: ${{ inputs.sbom-repository-name }}
#          ref: ${{ inputs.sbom-repository-ref }}
#      - name: Log Integration Inputs
#        run: ./inputs.sh
#        env:
#          SERVICE_NOW_INSTANCE_URL: Test
#          SBOM_SOURCE_STRATEGY: ${{ inputs.sbom-source-strategy }}
#          SBOM_SOURCE_DIRECTORY: ${{ inputs.sbom-source-directory }}
#          GITHUB_ACTION_PATH: ${{ github.action_path }}
#  log-inputs:
#    runs-on: ubuntu-latest
#    needs: checkout-repo
#    defaults:
#      run:
#        shell: bash
#        working-directory: ./scripts
#    steps:
#      - name: list
#        run: ls -A >> $GITHUB_OUTPUT
#      - name: Make scripts executable
#        run: chmod +x ./input.sh
#      - name: Log workflow inputs
#        run: ./inputs.sh